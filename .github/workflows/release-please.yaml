on:
  push:
    branches:
      - main
name: release-please
jobs:
  release-please:
    name: Release
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
      CGO_ENABLED: 0
      GOOS: linux
      GOARCH: amd64
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          release-type: go
          package-name: flux-helm-preview
#      - uses: actions/checkout@master
#      - uses: actions/setup-go@v3
#        with:
#          go-version: 1.18.x
#          cache: true
#          cache-dependency-path: go.sum
#      - run:  go build -ldflags "-s -w -extldflags '-static'" -o build/fhp ./cmd/action && strip build/fhp
#      - name: Run UPX
#        uses: crazy-max/ghaction-upx@v2
#        with:
#          version: latest
#          files: |
#            ./build/fhp
#      - run: cp cmd/action/{action.yml,invoke_binary.js} build/
#      - name: Deploy
#        uses: s0/git-publish-subdir-action@develop
#        env:
#          REPO: self
#          BRANCH: release
#          FOLDER: build
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      - name: tag major and minor versions
#        if: ${{ steps.release.outputs.release_created }}
#        run: |
#          git tag -d v${{ steps.release.outputs.major }} || true
#          git tag -d v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} || true
#          git push origin :v${{ steps.release.outputs.major }} || true
#          git push origin :v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} || true
#          git tag -a v${{ steps.release.outputs.major }} -m "Release v${{ steps.release.outputs.major }}"
#          git tag -a v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} -m "Release v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}"
#          git push origin v${{ steps.release.outputs.major }}
#          git push origin v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}