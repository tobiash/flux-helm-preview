name: Binary Release
on:
  workflow_dispatch:
    inputs:
      version:
        required: true
        description: Version to release
      target_branch:
        required: false
        description: Target branch
        default: main
  workflow_call:
    secrets:
      APP_ID:
        required: true
      APP_INSTALLATION_ID:
        required: true
      PRIVATE_KEY:
        required: true
    inputs:
      version:
        type: string
        required: true
        description: Version to release
      target_branch:
        type: string
        required: false
        description: Target branch
        default: main
jobs:
  binary-release:
    name: Binary release
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
      CGO_ENABLED: 0
      GOOS: linux
      GOARCH: amd64
    steps:
      - id: go-cache-paths
        run: |
          echo "::set-output name=go-build::$(go env GOCACHE)"
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.PRIVATE_KEY }}
          installation_id: ${{ secrets.APP_INSTALLATION_ID }}
      - uses: actions/checkout@master
      - name: Go Build Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.go-cache-paths.outputs.go-build }}
          key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}
      - name: Go Mod Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.go-cache-paths.outputs.go-mod }}
          key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}
      - uses: actions/setup-go@v3
        with:
          go-version: 1.18.x
          cache: true
          cache-dependency-path: go.sum
      - run:  go build -ldflags "-s -w -extldflags '-static'" -o build/fhp ./cmd/action && strip build/fhp
      - name: Run UPX
        uses: crazy-max/ghaction-upx@v2
        with:
          version: latest
          files: |
            ./build/fhp
      - run: cp cmd/action/{action.yml,invoke_binary.js} build/
      - run: |-
          git config --global user.name "fhp-release-bot"
          git config --global user.email "fhp-release-bot@fhp"
          git clone https://x-access-token:${{ steps.generate_token.outputs.token }}@github.com/tobiash/flux-helm-preview-action.git release
          cd release
          if ! git rev-parse --verify ${{ inputs.target_branch }} >/dev/null 2>&1; then
            git checkout -b ${{ inputs.target_branch }}
          else
            git checkout ${{ inputs.target_branch }}
          fi
          cp -r ../build/* .
          git add .
          git commit -m "chore: Build release ${{ inputs.version }}" -m "Release-As: ${{ inputs.version }}"
          git push origin HEAD:${{ inputs.target_branch }}